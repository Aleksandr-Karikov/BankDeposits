<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>